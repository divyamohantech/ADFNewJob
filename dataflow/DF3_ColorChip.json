{
	"name": "DF3_ColorChip",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "SQLDynamicDS",
						"type": "DatasetReference"
					},
					"name": "SRInCSV"
				},
				{
					"dataset": {
						"referenceName": "SQLDynamicDS",
						"type": "DatasetReference"
					},
					"name": "SRColorTool"
				},
				{
					"dataset": {
						"referenceName": "SQLDynamicDS",
						"type": "DatasetReference"
					},
					"name": "SRPanel"
				},
				{
					"dataset": {
						"referenceName": "SQLDynamicDS",
						"type": "DatasetReference"
					},
					"name": "SRCSVIn"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "SQLDynamicDS",
						"type": "DatasetReference"
					},
					"name": "SKColorCHIP"
				},
				{
					"dataset": {
						"referenceName": "SQLDynamicDS",
						"type": "DatasetReference"
					},
					"name": "SK1"
				}
			],
			"transformations": [
				{
					"name": "NotExistsRecords"
				},
				{
					"name": "select1"
				},
				{
					"name": "ExistsUniqueRecords"
				},
				{
					"name": "select2"
				},
				{
					"name": "JoinCondition"
				},
				{
					"name": "Join"
				}
			],
			"scriptLines": [
				"source(output(",
				"          COLOR_Tool_Name as string,",
				"          Color_Chip_Name as string,",
				"          DateTime as string,",
				"          Color_Chip_Source as string,",
				"          Scheme as string,",
				"          Instrument as string,",
				"          Geometry as string,",
				"          {400} as string,",
				"          {410} as string,",
				"          {420} as string,",
				"          {430} as string,",
				"          {440} as string,",
				"          {450} as string,",
				"          {460} as string,",
				"          {470} as string,",
				"          {480} as string,",
				"          {490} as string,",
				"          {500} as string,",
				"          {510} as string,",
				"          {520} as string,",
				"          {530} as string,",
				"          {540} as string,",
				"          {550} as string,",
				"          {560} as string,",
				"          {570} as string,",
				"          {580} as string,",
				"          {590} as string,",
				"          {600} as string,",
				"          {610} as string,",
				"          {620} as string,",
				"          {630} as string,",
				"          {640} as string,",
				"          {650} as string,",
				"          {660} as string,",
				"          {670} as string,",
				"          {680} as string,",
				"          {690} as string,",
				"          {700} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> SRInCSV",
				"source(output(",
				"          COLOR_TOOL_ID as integer,",
				"          COLOR_TOOL_NAME as string,",
				"          COLOR_TOOL_TYPE_ID as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> SRColorTool",
				"source(output(",
				"          PANEL_ID as integer,",
				"          NAME as string,",
				"          IS_METALLIC as integer,",
				"          CREATE_USER_ID as integer,",
				"          CREATE_DATE as timestamp,",
				"          NOTES as string,",
				"          IS_PUBLIC as integer,",
				"          ENTITY_ID as integer,",
				"          IS_INACTIVE as integer,",
				"          AUDIT_SEARCH_INDEX_DATE as timestamp,",
				"          IS_FLAGGED as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> SRPanel",
				"source(output(",
				"          COLOR_Tool_Name as string,",
				"          Color_Chip_Name as string,",
				"          DateTime as string,",
				"          Color_Chip_Source as string,",
				"          Scheme as string,",
				"          Instrument as string,",
				"          Geometry as string,",
				"          {400} as string,",
				"          {410} as string,",
				"          {420} as string,",
				"          {430} as string,",
				"          {440} as string,",
				"          {450} as string,",
				"          {460} as string,",
				"          {470} as string,",
				"          {480} as string,",
				"          {490} as string,",
				"          {500} as string,",
				"          {510} as string,",
				"          {520} as string,",
				"          {530} as string,",
				"          {540} as string,",
				"          {550} as string,",
				"          {560} as string,",
				"          {570} as string,",
				"          {580} as string,",
				"          {590} as string,",
				"          {600} as string,",
				"          {610} as string,",
				"          {620} as string,",
				"          {630} as string,",
				"          {640} as string,",
				"          {650} as string,",
				"          {660} as string,",
				"          {670} as string,",
				"          {680} as string,",
				"          {690} as string,",
				"          {700} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> SRCSVIn",
				"SRInCSV, SRColorTool exists(SRInCSV@COLOR_Tool_Name == SRColorTool@COLOR_TOOL_NAME,",
				"     negate:true,",
				"     broadcast: 'both')~> NotExistsRecords",
				"NotExistsRecords select(mapColumn(",
				"          COLOR_Tool_Name,",
				"          Color_Chip_Name,",
				"          DateTime,",
				"          Color_Chip_Source",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1, SRPanel exists(Color_Chip_Name == NAME,",
				"     negate:true,",
				"     broadcast: 'right')~> ExistsUniqueRecords",
				"ExistsUniqueRecords select(mapColumn(",
				"          COLOR_Tool_Name,",
				"          Color_Chip_Name,",
				"          DateTime,",
				"          Color_Chip_Source",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select2",
				"SRCSVIn, SRColorTool join(SRCSVIn@COLOR_Tool_Name == SRColorTool@COLOR_TOOL_NAME,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> JoinCondition",
				"JoinCondition, SRPanel join(Color_Chip_Name == NAME,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> Join",
				"select2 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          MEASUREMENT_ID as integer,",
				"          READING_ID as integer,",
				"          GEOMETRY as string,",
				"          RAW_DATA as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     saveOrder: 1,",
				"     errorHandlingOption: 'stopOnFirstError') ~> SKColorCHIP",
				"Join sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          MEASUREMENT_ID as integer,",
				"          READING_ID as integer,",
				"          GEOMETRY as string,",
				"          RAW_DATA as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> SK1"
			]
		}
	}
}