{
	"name": "dataflow_dynamic_1_Complete_v3",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "SQLDynamicDS",
						"type": "DatasetReference"
					},
					"name": "SourceIncsv"
				},
				{
					"dataset": {
						"referenceName": "SQLDynamicDS",
						"type": "DatasetReference"
					},
					"name": "SourceColorTool"
				},
				{
					"dataset": {
						"referenceName": "SQLDynamicDS",
						"type": "DatasetReference"
					},
					"name": "SourceInCSVtable"
				},
				{
					"dataset": {
						"referenceName": "SQLDynamicDS",
						"type": "DatasetReference"
					},
					"name": "SourceColorToolTbale"
				},
				{
					"dataset": {
						"referenceName": "SQLDynamicDS",
						"type": "DatasetReference"
					},
					"name": "SourceApprovedRecords"
				},
				{
					"dataset": {
						"referenceName": "SQLDynamicDS",
						"type": "DatasetReference"
					},
					"name": "SourceColorToolAfterInsert"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DelimitedTextDymanicCSVFiles",
						"type": "DatasetReference"
					},
					"name": "SinkRejectedFile1"
				},
				{
					"dataset": {
						"referenceName": "SQLDynamicDS",
						"type": "DatasetReference"
					},
					"name": "SinkTableColorTool3",
					"description": "Export data to SQLDynamicDS "
				},
				{
					"dataset": {
						"referenceName": "DelimitedTextDymanicCSVFiles",
						"type": "DatasetReference"
					},
					"name": "SinkApprovedFile4",
					"description": "Export data to DelimitedTextColorCSv"
				},
				{
					"name": "SinkCacheNewRecordsFile2"
				},
				{
					"dataset": {
						"referenceName": "SQLDynamicDS",
						"type": "DatasetReference"
					},
					"name": "SinkTableColorToolLog1"
				},
				{
					"dataset": {
						"referenceName": "SQLDynamicDS",
						"type": "DatasetReference"
					},
					"name": "SinkTableColorToolLog2"
				},
				{
					"dataset": {
						"referenceName": "SQLDynamicDS",
						"type": "DatasetReference"
					},
					"name": "SinkTableColorToolLog3",
					"description": "Export data to SQLDynamicDSEDIT"
				}
			],
			"transformations": [
				{
					"name": "SelectData"
				},
				{
					"name": "DontExistsTestConditionNewRecords",
					"description": "Filtering rows from undefined which are not matching in undefined based on columns 1j1'SourceIncsv@COLOR_Tool_Name, SourceColorTool@COLOR_TOOL_NAME'"
				},
				{
					"name": "joinRejectionCondition",
					"description": "Inner join on 'SourceInCSVtable' and 'SourceColorToolTbale'q"
				},
				{
					"name": "SelectDataColorTool"
				},
				{
					"name": "NewApprovedrecords",
					"description": "Inner join on 'SelectData' and 'SourceColorTool'a"
				},
				{
					"name": "Innerjoin"
				}
			],
			"scriptLines": [
				"source(output(",
				"          COLOR_Tool_Name as string,",
				"          Color_Chip_Name as string,",
				"          DateTime as string,",
				"          Color_Chip_Source as string,",
				"          Scheme as string,",
				"          Instrument as string,",
				"          Geometry as string,",
				"          {400} as string,",
				"          {410} as string,",
				"          {420} as string,",
				"          {430} as string,",
				"          {440} as string,",
				"          {450} as string,",
				"          {460} as string,",
				"          {470} as string,",
				"          {480} as string,",
				"          {490} as string,",
				"          {500} as string,",
				"          {510} as string,",
				"          {520} as string,",
				"          {530} as string,",
				"          {540} as string,",
				"          {550} as string,",
				"          {560} as string,",
				"          {570} as string,",
				"          {580} as string,",
				"          {590} as string,",
				"          {600} as string,",
				"          {610} as string,",
				"          {620} as string,",
				"          {630} as string,",
				"          {640} as string,",
				"          {650} as string,",
				"          {660} as string,",
				"          {670} as string,",
				"          {680} as string,",
				"          {690} as string,",
				"          {700} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> SourceIncsv",
				"source(output(",
				"          COLOR_TOOL_ID as integer,",
				"          COLOR_TOOL_NAME as string,",
				"          COLOR_TOOL_TYPE_ID as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> SourceColorTool",
				"source(output(",
				"          COLOR_Tool_Name as string,",
				"          Color_Chip_Name as string,",
				"          DateTime as string,",
				"          Color_Chip_Source as string,",
				"          Scheme as string,",
				"          Instrument as string,",
				"          Geometry as string,",
				"          {400} as string,",
				"          {410} as string,",
				"          {420} as string,",
				"          {430} as string,",
				"          {440} as string,",
				"          {450} as string,",
				"          {460} as string,",
				"          {470} as string,",
				"          {480} as string,",
				"          {490} as string,",
				"          {500} as string,",
				"          {510} as string,",
				"          {520} as string,",
				"          {530} as string,",
				"          {540} as string,",
				"          {550} as string,",
				"          {560} as string,",
				"          {570} as string,",
				"          {580} as string,",
				"          {590} as string,",
				"          {600} as string,",
				"          {610} as string,",
				"          {620} as string,",
				"          {630} as string,",
				"          {640} as string,",
				"          {650} as string,",
				"          {660} as string,",
				"          {670} as string,",
				"          {680} as string,",
				"          {690} as string,",
				"          {700} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> SourceInCSVtable",
				"source(output(",
				"          COLOR_TOOL_ID as integer,",
				"          COLOR_TOOL_NAME as string,",
				"          COLOR_TOOL_TYPE_ID as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> SourceColorToolTbale",
				"source(output(",
				"          COLOR_TOOL_ID as integer,",
				"          COLOR_TOOL_NAME as string,",
				"          COLOR_TOOL_TYPE_ID as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> SourceApprovedRecords",
				"source(output(",
				"          COLOR_TOOL_ID as integer,",
				"          COLOR_TOOL_NAME as string,",
				"          COLOR_TOOL_TYPE_ID as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     query: 'Select  COLOR_TOOL_ID, COLOR_TOOL_NAME, COLOR_TOOL_TYPE_ID from [dbo].[COLOR_TOOL]',",
				"     format: 'query') ~> SourceColorToolAfterInsert",
				"DontExistsTestConditionNewRecords select(mapColumn(",
				"          COLOR_Tool_Name",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectData",
				"SourceIncsv, SourceColorTool exists(SourceIncsv@COLOR_Tool_Name == SourceColorTool@COLOR_TOOL_NAME,",
				"     negate:true,",
				"     broadcast: 'auto')~> DontExistsTestConditionNewRecords",
				"SourceInCSVtable, SourceColorToolTbale join(SourceInCSVtable@COLOR_Tool_Name == SourceColorToolTbale@COLOR_TOOL_NAME,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'left')~> joinRejectionCondition",
				"joinRejectionCondition select(mapColumn(",
				"          COLOR_Tool_Name = SourceInCSVtable@COLOR_Tool_Name",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectDataColorTool",
				"SelectData, SourceColorToolAfterInsert join(SelectData@COLOR_Tool_Name == SourceColorToolAfterInsert@COLOR_TOOL_NAME,",
				"     joinType:'right',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'right')~> NewApprovedrecords",
				"SourceApprovedRecords, SourceColorTool join(SourceApprovedRecords@COLOR_TOOL_NAME == SourceColorTool@COLOR_TOOL_NAME,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> Innerjoin",
				"SelectDataColorTool sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          COLOR_TOOL_ID as string,",
				"          COLOR_TOOL_NAME as string,",
				"          COLOR_TOOL_TYPE_ID as string",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     saveOrder: 1,",
				"     mapColumn(",
				"          COLOR_TOOL_NAME = COLOR_Tool_Name",
				"     )) ~> SinkRejectedFile1",
				"SelectData sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          COLOR_TOOL_ID as integer,",
				"          COLOR_TOOL_NAME as string,",
				"          COLOR_TOOL_TYPE_ID as integer",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     saveOrder: 3,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          COLOR_TOOL_NAME = COLOR_Tool_Name",
				"     )) ~> SinkTableColorTool3",
				"NewApprovedrecords sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          COLOR_TOOL_ID as string,",
				"          COLOR_TOOL_NAME as string,",
				"          COLOR_TOOL_TYPE_ID as string",
				"     ),",
				"     saveOrder: 3,",
				"     mapColumn(",
				"          COLOR_TOOL_ID,",
				"          COLOR_TOOL_NAME = SourceColorToolAfterInsert@COLOR_TOOL_NAME,",
				"          COLOR_TOOL_TYPE_ID",
				"     )) ~> SinkApprovedFile4",
				"SelectData sink(validateSchema: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     store: 'cache',",
				"     format: 'inline',",
				"     output: true,",
				"     saveOrder: 2) ~> SinkCacheNewRecordsFile2",
				"DontExistsTestConditionNewRecords sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          COLOR_TOOL_ID as integer,",
				"          COLOR_TOOL_NAME as string,",
				"          COLOR_TOOL_TYPE_ID as integer",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     saveOrder: 4,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          COLOR_TOOL_NAME = COLOR_Tool_Name",
				"     )) ~> SinkTableColorToolLog1",
				"SelectData sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          COLOR_TOOL_ID as integer,",
				"          COLOR_TOOL_NAME as string,",
				"          COLOR_TOOL_TYPE_ID as integer",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     saveOrder: 5,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          COLOR_TOOL_NAME = COLOR_Tool_Name",
				"     )) ~> SinkTableColorToolLog2",
				"NewApprovedrecords sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          COLOR_TOOL_ID as integer,",
				"          COLOR_TOOL_NAME as string,",
				"          COLOR_TOOL_TYPE_ID as integer",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     saveOrder: 6,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          COLOR_TOOL_NAME = SelectData@COLOR_Tool_Name",
				"     )) ~> SinkTableColorToolLog3"
			]
		}
	}
}