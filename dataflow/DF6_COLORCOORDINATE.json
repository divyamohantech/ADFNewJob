{
	"name": "DF6_COLORCOORDINATE",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "SQLDynamicDS",
						"type": "DatasetReference"
					},
					"name": "SRInCSV"
				},
				{
					"dataset": {
						"referenceName": "SQLDynamicDS",
						"type": "DatasetReference"
					},
					"name": "SRPanelTable"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "SQLDynamicDS",
						"type": "DatasetReference"
					},
					"name": "SKCOLORCOORDINATE"
				}
			],
			"transformations": [
				{
					"name": "join1"
				},
				{
					"name": "DistinctValues"
				},
				{
					"name": "select2"
				}
			],
			"scriptLines": [
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> SRInCSV",
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> SRPanelTable",
				"SRInCSV, SRPanelTable join(Color_Chip_Name == NAME,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"select2 aggregate(groupBy(Scheme,",
				"          Geometry,",
				"          PANEL_ID),",
				"     Color_Chip_NameNew = first(Color_Chip_Name)) ~> DistinctValues",
				"join1 select(mapColumn(",
				"          Scheme,",
				"          Geometry,",
				"          PANEL_ID,",
				"          Color_Chip_Name",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select2",
				"DistinctValues sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          PANEL_ID,",
				"          GEOMETRY = Geometry,",
				"          MEASUREMENT_SCHEME = Scheme",
				"     )) ~> SKCOLORCOORDINATE"
			]
		}
	}
}